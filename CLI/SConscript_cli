import SCons.Environment
import SCons.Script
import SCons.Node
import SCons.Node.FS
import glob
import SCons.Script.SConsOptions
import compiler_options
import post_actions
import platform

from site_scons import ALIAS_CORE

# * Import the parent Environment
env: SCons.Environment.Environment
SCons.Script.Import('env')


# * ---- Build metaffi executable ----
env_cli = env.Clone()
env_cli.LoadConanPackagesInfo()

source = env['sdk_src']
source += glob.glob(env_cli.Dir('.').abspath+'/*.cpp')

includes = env['sdk_includes']
includes += [env_cli.Dir('.').abspath]

if platform.system() == 'Linux' or platform.system() == 'Darwin':
	env_cli.Append(LINKFLAGS=['-Wl,-rpath,$ORIGIN'])

cli_exec = env_cli.CPPProgram(target='metaffi', project_name='metaffi', sources=source, include_dirs=includes)

cli_install = env_cli.Install(env_cli['METAFFI_HOME'], cli_exec)
env_cli.Depends(cli_install, cli_exec)

# install boost_program_options.dll
cli_depends_install = env_cli.Install(env_cli['METAFFI_HOME'], env_cli.SearchConanBinaryFile('boost', f'boost_program_options{env_cli.DynamicLibraryExtension()}'))

SCons.Script.Alias(ALIAS_CORE, [cli_exec, cli_install, cli_depends_install])