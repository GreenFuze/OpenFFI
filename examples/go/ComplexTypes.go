//+build guest

package main

import "fmt"

/*
	Complex types that can be shared between languages in OpenFFI are
	the complex types defined in protobuf.
	The following example uses 2 complex types from PythonFuncs.pb.go generated by protoc
	GameData{ Player, PawnWins, BossWins }
	GameScore{ Player, Score }
*/
func CalculateScore(gdata GameData) GameScore{
	Score := gdata.PawnWins
	Score = Score + (gdata.BossWins * 5)
	fmt.Printf("%v Score is %v\n", gdata.Player, Score)

	gScore := GameScore{}
	gScore.Player = gdata.Player
	gScore.Score = Score

	return gScore
}

func GenScores() ([]*GameScore, int32){
	gScore1 := &GameScore{}
	gScore1.Player = "Player1"
	gScore1.Score = 1

	gScore2 := &GameScore{}
	gScore2.Player = "Player2"
	gScore2.Score = 5

	return []*GameScore{gScore1, gScore2}, (gScore1.Score + gScore2.Score)
}